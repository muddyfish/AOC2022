"""
Position = Tuple[int, int]

with open("17.txt") as f:
    chars = f.read()

rocks = [
    {(0, 0), (1, 0), (2, 0), (3, 0)},
    {(1, 0), (0, 1), (1, 1), (1, 2), (2, 1)},
    {(0, 0), (1, 0), (2, 0), (2, 1), (2, 2)},
    {(0, 0), (0, 1), (0, 2), (0, 3)},
    {(0, 0), (0, 1), (1, 0), (1, 1)},
]

initial_x = 2
max_x = 6
max_height = -1
tower = set()
dirs = {">": (1, 0), "<": (-1, 0)}
down = (0, -1)

rocks_fallen = 0
rocks_iter = itertools.cycle(rocks)


@dataclasses.dataclass
class Rock:
    pieces: Set[Position]
    offset: Position

    def get_pos(self) -> Set[Position]:
        return {(x1+self.offset[0], y1+self.offset[1]) for x1, y1 in self.pieces}

    def collides(self) -> bool:
        places = self.get_pos()
        if not all(0 <= x <= max_x for (x, y) in places):
            return True
        if any(y < 0 for (x, y) in places):
            return True
        if any(pos in tower for pos in places):
            return True
        return False

    def __iadd__(self, other: Position):
        self.offset = (self.offset[0] + other[0], self.offset[1] + other[1])
        return self

    def __isub__(self, other: Position):
        self.offset = (self.offset[0] - other[0], self.offset[1] - other[1])
        return self


def draw_tower():
    for y in range(max_height+6, -1, -1):
        print(f"|{''.join('@' if (x,y) in current_rock.get_pos() else ' #'[(x, y) in tower] for x in range(max_x+1))}|", y)


def add_rock(rock: Rock):
    global max_height
    for (x, y) in rock.get_pos():
        tower.add((x, y))
        max_height = max(max_height, y)


def create_rock() -> Rock:
    pieces = next(rocks_iter)
    initial_pos = (initial_x, max_height + 4)
    return Rock(pieces, initial_pos)


current_rock = create_rock()


max_height_history = []
rocks_fallen_history = []


# Rock fall history: Initial 976
# Rock fall history: Add 1725

for i, char in enumerate(itertools.cycle(chars)):
    # Left/right
    offset = dirs[char]
    current_rock += offset
    if current_rock.collides():
        current_rock -= offset

    # Down
    current_rock += down
    if current_rock.collides():
        current_rock -= down
        add_rock(current_rock)
        rocks_fallen += 1
        if current_rock.pieces == rocks[0] and current_rock.offset[0] == 3 and max(y for x, y in current_rock.get_pos()) == max_height and i % len(chars) == 5749:
            max_height_history.append(max_height)
            rocks_fallen_history.append(rocks_fallen)
            print(max_height_history)
        if len(max_height_history) == 2:
            period[rocks_fallen-rocks_fallen_history[-1]] = max_height-max_height_history[-1]
        elif len(max_height_history) > 2:
            assert period[rocks_fallen-rocks_fallen_history[-1]] == max_height-max_height_history[-1]
        current_rock = create_rock()

        if rocks_fallen == 62323:
            print(max_height+1)
            break

"""

period = [0, 2, 4, 6, 6, 7, 10, 13, 13, 15, 16, 18, 21, 23, 23, 24, 27, 29, 33, 33, 34, 36, 38, 40, 40, 41, 44, 44, 46, 46, 47, 50, 53, 53, 53, 54, 57, 60, 60, 62, 63, 65, 66, 66, 67, 68, 71, 74, 74, 74, 75, 77, 78, 78, 78, 79, 82, 82, 85, 85, 86, 89, 92, 94, 94, 95, 97, 98, 100, 102, 103, 105, 106, 110, 112, 113, 116, 119, 123, 123, 124, 127, 130, 132, 132, 133, 136, 138, 139, 140, 140, 143, 146, 146, 146, 147, 150, 150, 153, 153, 153, 155, 158, 160, 162, 163, 165, 168, 168, 168, 169, 170, 173, 173, 175, 175, 178, 178, 182, 182, 182, 183, 186, 186, 188, 189, 192, 195, 195, 195, 196, 199, 202, 204, 204, 205, 208, 211, 215, 215, 216, 219, 222, 224, 226, 227, 229, 232, 234, 234, 235, 238, 241, 243, 245, 246, 249, 252, 256, 256, 257, 260, 263, 265, 267, 268, 270, 271, 275, 277, 278, 281, 284, 284, 284, 284, 286, 287, 289, 289, 290, 293, 296, 296, 296, 296, 298, 301, 303, 303, 304, 307, 310, 310, 310, 311, 314, 317, 317, 319, 320, 323, 325, 327, 329, 330, 332, 333, 335, 337, 338, 340, 342, 344, 344, 344, 346, 346, 347, 349, 350, 353, 355, 357, 357, 358, 361, 363, 367, 367, 368, 370, 372, 373, 375, 375, 378, 378, 378, 380, 381, 384, 387, 387, 387, 387, 390, 393, 397, 397, 398, 401, 404, 406, 406, 407, 410, 412, 413, 413, 414, 417, 419, 421, 421, 422, 422, 425, 425, 427, 428, 431, 433, 435, 435, 436, 438, 439, 439, 440, 441, 443, 446, 446, 448, 449, 451, 454, 456, 456, 457, 460, 463, 467, 469, 470, 473, 475, 476, 476, 477, 479, 482, 486, 486, 487, 490, 493, 493, 495, 496, 499, 502, 502, 502, 503, 505, 508, 510, 512, 513, 513, 516, 518, 518, 519, 522, 525, 525, 525, 526, 529, 532, 534, 536, 537, 540, 540, 544, 546, 547, 549, 552, 554, 556, 557, 560, 560, 560, 562, 563, 566, 568, 568, 568, 568, 570, 573, 577, 577, 578, 580, 582, 584, 584, 585, 585, 588, 590, 592, 593, 595, 597, 599, 601, 601, 601, 603, 605, 605, 606, 609, 611, 613, 613, 614, 616, 618, 622, 624, 625, 628, 628, 630, 630, 631, 634, 636, 638, 640, 640, 642, 645, 645, 647, 648, 651, 653, 655, 655, 656, 658, 661, 661, 661, 662, 662, 665, 666, 666, 667, 667, 670, 672, 674, 675, 677, 679, 683, 683, 684, 687, 689, 693, 693, 694, 696, 698, 702, 704, 704, 707, 709, 709, 711, 711, 711, 714, 715, 717, 718, 721, 724, 728, 728, 729, 732, 734, 734, 736, 736, 736, 739, 739, 741, 742, 744, 747, 747, 747, 748, 750, 751, 753, 753, 753, 756, 759, 763, 765, 766, 769, 772, 774, 774, 774, 777, 777, 777, 777, 778, 781, 784, 784, 784, 785, 788, 790, 791, 791, 791, 793, 794, 795, 795, 796, 799, 802, 802, 802, 803, 806, 809, 809, 809, 810, 813, 815, 815, 815, 816, 819, 822, 822, 822, 823, 826, 828, 828, 828, 829, 832, 835, 835, 835, 836, 838, 840, 842, 842, 843, 846, 848, 848, 848, 849, 852, 855, 857, 859, 860, 863, 863, 867, 867, 868, 871, 873, 875, 875, 876, 878, 879, 881, 881, 881, 884, 884, 886, 888, 889, 891, 894, 894, 894, 895, 898, 898, 901, 903, 904, 907, 910, 910, 912, 913, 916, 918, 920, 920, 920, 922, 923, 925, 927, 928, 931, 934, 934, 934, 934, 936, 938, 940, 940, 941, 943, 946, 948, 948, 949, 951, 952, 955, 955, 956, 958, 959, 961, 961, 961, 964, 966, 970, 972, 973, 975, 978, 980, 982, 983, 986, 989, 991, 991, 992, 995, 997, 999, 999, 1000, 1000, 1003, 1005, 1007, 1008, 1011, 1014, 1016, 1018, 1019, 1021, 1024, 1026, 1026, 1027, 1030, 1033, 1037, 1037, 1037, 1037, 1040, 1041, 1041, 1042, 1045, 1045, 1049, 1051, 1052, 1055, 1058, 1058, 1060, 1061, 1064, 1067, 1071, 1071, 1072, 1075, 1078, 1078, 1078, 1079, 1082, 1084, 1088, 1090, 1091, 1093, 1094, 1096, 1096, 1097, 1100, 1103, 1103, 1103, 1103, 1105, 1107, 1111, 1111, 1111, 1111, 1114, 1115, 1117, 1118, 1120, 1123, 1123, 1124, 1125, 1127, 1130, 1132, 1132, 1133, 1136, 1138, 1140, 1142, 1143, 1146, 1148, 1148, 1150, 1151, 1154, 1156, 1160, 1162, 1163, 1165, 1166, 1168, 1168, 1169, 1171, 1174, 1174, 1176, 1177, 1179, 1181, 1181, 1183, 1184, 1187, 1189, 1191, 1191, 1192, 1195, 1198, 1198, 1198, 1199, 1202, 1204, 1206, 1206, 1207, 1210, 1213, 1217, 1217, 1218, 1221, 1224, 1224, 1224, 1225, 1226, 1228, 1230, 1232, 1232, 1235, 1235, 1235, 1236, 1237, 1239, 1242, 1242, 1242, 1242, 1244, 1247, 1249, 1249, 1250, 1253, 1253, 1255, 1255, 1256, 1259, 1262, 1264, 1266, 1267, 1270, 1273, 1275, 1277, 1278, 1281, 1283, 1285, 1287, 1287, 1287, 1290, 1292, 1294, 1295, 1298, 1300, 1304, 1306, 1307, 1310, 1313, 1313, 1313, 1314, 1317, 1320, 1322, 1322, 1323, 1325, 1326, 1328, 1328, 1329, 1332, 1335, 1335, 1337, 1338, 1340, 1341, 1344, 1344, 1345, 1348, 1351, 1351, 1353, 1354, 1357, 1359, 1361, 1361, 1361, 1363, 1366, 1366, 1366, 1367, 1370, 1373, 1373, 1373, 1374, 1376, 1379, 1381, 1383, 1383, 1385, 1388, 1392, 1392, 1393, 1396, 1398, 1399, 1399, 1399, 1402, 1405, 1409, 1409, 1409, 1411, 1413, 1413, 1413, 1413, 1416, 1419, 1421, 1423, 1424, 1427, 1427, 1430, 1430, 1430, 1433, 1436, 1438, 1438, 1439, 1441, 1444, 1444, 1444, 1444, 1446, 1447, 1449, 1449, 1450, 1453, 1456, 1460, 1460, 1461, 1464, 1467, 1469, 1469, 1470, 1472, 1473, 1476, 1476, 1477, 1480, 1483, 1483, 1483, 1484, 1487, 1490, 1490, 1490, 1491, 1494, 1497, 1497, 1497, 1498, 1499, 1502, 1502, 1502, 1503, 1506, 1509, 1509, 1509, 1510, 1512, 1514, 1516, 1516, 1517, 1520, 1522, 1524, 1526, 1527, 1530, 1532, 1532, 1532, 1533, 1536, 1538, 1540, 1540, 1541, 1544, 1547, 1547, 1549, 1550, 1553, 1555, 1556, 1556, 1556, 1558, 1559, 1560, 1560, 1561, 1563, 1564, 1566, 1568, 1569, 1572, 1574, 1576, 1576, 1577, 1580, 1583, 1585, 1585, 1586, 1589, 1592, 1594, 1596, 1597, 1600, 1602, 1602, 1602, 1603, 1606, 1609, 1611, 1611, 1611, 1613, 1616, 1618, 1618, 1619, 1621, 1624, 1624, 1624, 1625, 1626, 1628, 1629, 1629, 1629, 1632, 1635, 1637, 1639, 1639, 1642, 1645, 1649, 1649, 1650, 1653, 1653, 1655, 1657, 1657, 1657, 1660, 1661, 1661, 1662, 1665, 1665, 1669, 1669, 1669, 1671, 1672, 1672, 1672, 1673, 1676, 1678, 1678, 1678, 1679, 1682, 1685, 1687, 1687, 1688, 1691, 1691, 1694, 1694, 1694, 1697, 1699, 1701, 1703, 1704, 1707, 1710, 1710, 1710, 1711, 1714, 1717, 1719, 1721, 1722, 1725, 1727, 1727, 1728, 1728, 1731, 1734, 1738, 1738, 1739, 1742, 1745, 1747, 1747, 1747, 1747, 1750, 1752, 1752, 1753, 1756, 1756, 1758, 1760, 1760, 1760, 1763, 1763, 1763, 1764, 1767, 1770, 1772, 1772, 1773, 1776, 1778, 1782, 1782, 1783, 1785, 1788, 1788, 1790, 1790, 1791, 1793, 1795, 1795, 1796, 1799, 1802, 1802, 1802, 1803, 1806, 1808, 1810, 1810, 1810, 1812, 1812, 1814, 1814, 1815, 1817, 1820, 1822, 1822, 1823, 1825, 1826, 1829, 1831, 1832, 1835, 1838, 1838, 1840, 1841, 1844, 1846, 1850, 1850, 1851, 1854, 1854, 1854, 1855, 1856, 1858, 1860, 1864, 1864, 1865, 1868, 1871, 1873, 1873, 1874, 1877, 1880, 1882, 1882, 1883, 1886, 1886, 1889, 1889, 1889, 1891, 1893, 1894, 1894, 1895, 1898, 1898, 1901, 1903, 1904, 1904, 1907, 1907, 1907, 1908, 1911, 1914, 1916, 1916, 1917, 1920, 1922, 1924, 1924, 1924, 1926, 1928, 1928, 1928, 1929, 1932, 1932, 1935, 1935, 1935, 1937, 1937, 1940, 1942, 1943, 1946, 1949, 1949, 1949, 1950, 1953, 1953, 1955, 1955, 1956, 1959, 1959, 1962, 1964, 1965, 1967, 1969, 1973, 1975, 1975, 1977, 1980, 1980, 1980, 1980, 1982, 1985, 1985, 1987, 1988, 1991, 1993, 1995, 1995, 1995, 1997, 1999, 1999, 2001, 2001, 2001, 2004, 2005, 2005, 2005, 2008, 2011, 2013, 2015, 2016, 2019, 2021, 2023, 2025, 2026, 2028, 2030, 2032, 2034, 2035, 2037, 2038, 2040, 2040, 2041, 2044, 2047, 2049, 2049, 2050, 2053, 2056, 2060, 2062, 2063, 2066, 2069, 2071, 2071, 2072, 2074, 2077, 2077, 2077, 2078, 2081, 2083, 2085, 2085, 2086, 2089, 2089, 2091, 2091, 2092, 2095, 2097, 2099, 2099, 2100, 2103, 2105, 2107, 2109, 2110, 2113, 2115, 2117, 2119, 2120, 2120, 2123, 2125, 2125, 2126, 2129, 2132, 2132, 2132, 2132, 2134, 2136, 2138, 2140, 2141, 2144, 2147, 2149, 2149, 2150, 2153, 2155, 2155, 2156, 2156, 2159, 2162, 2164, 2166, 2167, 2170, 2172, 2172, 2172, 2173, 2176, 2179, 2179, 2179, 2180, 2183, 2186, 2190, 2190, 2191, 2191, 2191, 2195, 2197, 2198, 2201, 2204, 2204, 2204, 2205, 2208, 2211, 2213, 2213, 2214, 2217, 2219, 2221, 2221, 2222, 2225, 2227, 2228, 2230, 2231, 2234, 2236, 2237, 2238, 2239, 2242, 2245, 2249, 2249, 2249, 2251, 2253, 2255, 2257, 2258, 2261, 2264, 2266, 2268, 2269, 2272, 2275, 2275, 2275, 2276, 2278, 2281, 2283, 2283, 2284, 2287, 2290, 2290, 2290, 2291, 2294, 2297, 2299, 2299, 2300, 2303, 2305, 2307, 2309, 2310, 2310, 2313, 2315, 2317, 2318, 2320, 2322, 2324, 2326, 2327, 2329, 2332, 2334, 2336, 2337, 2340, 2343, 2343, 2345, 2346, 2349, 2349, 2350, 2351, 2352, 2355, 2355, 2359, 2359, 2360, 2363, 2365, 2366, 2368, 2369, 2372, 2375, 2377, 2377, 2378, 2381, 2384, 2386, 2386, 2387, 2389, 2392, 2396, 2396, 2397, 2397, 2400, 2402, 2402, 2403, 2406, 2409, 2413, 2415, 2416, 2419, 2421, 2423, 2423, 2424, 2427, 2430, 2430, 2432, 2433, 2435, 2436, 2438, 2438, 2439, 2442, 2444, 2446, 2446, 2447, 2450, 2452, 2453, 2455, 2456, 2458, 2461, 2463, 2463, 2463, 2465, 2466, 2466, 2467, 2467, 2470, 2472, 2472, 2472, 2472, 2475, 2475, 2477, 2479, 2480, 2483, 2486, 2486, 2486, 2487, 2489, 2491, 2493, 2493, 2494, 2496, 2499, 2501, 2501, 2502, 2505, 2508, 2510, 2512, 2513, 2516, 2518, 2522, 2524, 2525, 2528, 2530, 2531, 2533, 2534, 2537, 2539, 2541, 2543, 2543, 2545, 2545, 2549, 2549, 2550, 2553, 2556, 2556, 2558, 2559, 2562, 2565, 2567, 2569, 2570, 2573, 2575, 2575, 2577, 2578, 2581, 2584, 2586, 2586, 2587, 2589, 2591, 2595, 2595, 2595, 2597, 2599, 2599, 2601, 2602, 2605, 2607, 2609, 2609, 2610, 2613, 2615, 2616, 2616, 2616, 2619, 2621, 2625, 2625, 2626, 2629, 2632, 2634, 2636, 2637, 2639, 2642, 2642, 2643, 2644, 2647, 2647, 2648, 2648, 2649, 2651, 2654, 2658, 2658, 2659, 2662, 2664, 2666, 2666, 2667, 2670, 2673, 2675, 2675, 2676, 2678, 2680, 2681, 2681, 2682, 2685, 2687, 2689, 2689, 2690, 2693, 2696, 2700, 2702, 2703, 2706, 2709, 2709, 2709, 2710, 2713, 2716, 2718, 2720, 2721, 2724, 2727, 2727, 2727]


def max_height(rocks_fallen) -> int:
    return ((rocks_fallen-976) // len(period)) * 2728 + 1515 + period[(rocks_fallen-976) % len(period)]


print(max_height(1000000000000))
